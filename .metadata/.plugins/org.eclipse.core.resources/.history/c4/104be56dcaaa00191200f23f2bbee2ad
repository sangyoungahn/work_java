package com.ssafy.algo;

import java.util.Scanner;

public class Solution21 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int T = sc.nextInt();
		int[] result = new int[T];	//result 값을 저장하는 배열

		//테스트 케이스만큼 반복
		for(int t=0; t<T; t++) {		//테스트케이스
			int N = sc.nextInt();	//연못의 한 변의 길이
			int num = sc.nextInt();		//소금쟁이의 수
			int[][] pond = new int[N][N];		//연못의 크기
			

			//소금쟁이 수만큼 반복
			for(int k=0; k<num; k++) {
				int x = sc.nextInt();	//x, y값을 받음
				int y = sc.nextInt();
				int dir = sc.nextInt();
				//int yNext = 0;	//이동했을 때 y의 다음값을 넣는 변수(+3, +2, +1)
				//int xNext = 0;	//이동했을 때 x의 다음값을 넣는 변수(+3, +2, +1)

				//입력 받은 x,y를 초기 위치에 넣음
				pond[x][y] = 1;
				
				//초기값에 1이 있으면
				if(pond[x][y] == 1) {
					result[t] = num;
				}
				
				//초기값이 1이 아니면
				else {
					//dir=1이면 연못 배열에서 아래로 이동(배열의 y값을 증가시켜줌)
					if(dir==1) {
						for(int j=3; j>0; j--) {
							y += j;					//y값에 +3,+2,+1을 각각 해줌
							if(y >= N || y < 0)		//연못의 범위를 넘으면 점프 멈춤
								break;
							else {					//연못의 범위를 넘지 않고 
								if(pond[x][y] == 1) {	//연못의 뛴 자리에 흔적이 있으면
									result[t] = num;	//결과값에 소금쟁이 번호 저장
								}
							}
							pond[x][y] = 1;		//연못의 범위를 넘지않고, 흔적도 없으면 그 자리에 1을 저장
						}
						result[t] = 0;		//pond[x][y] 값이 1이 아니라는 것은 소금쟁이가 지나갈 때 흔적이 있는 자리가 없었다는 것
					}

					//dir=2이면 연못 배열에서 오른쪽으로 이동(배열의 x값을 증가시켜줌)
					else {
						for(int j=3; j>0; j--) {
							x += j;		//x값에 +3,+2,+1을 각각 해줌
							if(x >= N || x < 0)		//연못의 범위를 넘으면 점프 멈춤
								break;
							else {					//연못의 범위를 넘지 않고 
								if(pond[x][y] == 1) {	//연못의 뛴 자리에 흔적이 있으면
									result[t] = num;	//결과값에 소금쟁이 번호 저장
								}
							}
							pond[x][y] = 1;		//연못의 범위를 넘지않고, 흔적도 없으면 그 자리에 1을 저장
						}
						result[t] = 0;		//pond[x][y] 값이 1이 아니라는 것은 소금쟁이가 지나갈 때 흔적이 있는 자리가 없었다는 것
					}
				}
			}
		}
		
		for(int t=1; t<T; t++) {
			System.out.println("#" + t + " " + result[t]);
		}
	}
}